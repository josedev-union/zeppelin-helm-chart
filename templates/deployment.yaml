apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zeppelin.fullname" . }}-server
  labels:
    {{- include "zeppelin.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zeppelin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zeppelin.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zeppelin.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: zeppelin-server
          image: "{{ .Values.image.server.repository }}:{{ .Values.image.server.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.server.pullPolicy }}
          command: ["sh", "-c", "$(ZEPPELIN_HOME)/bin/zeppelin.sh"]
          env:
          - name: POD_UID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.uid
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          envFrom:
            - configMapRef:
                name: {{ include "zeppelin.fullname" . }}-env
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["sh", "-c", "ps -ef | grep org.apache.zeppelin.server.ZeppelinServer | grep -v grep | awk '{print $2}' | xargs kill"]
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.http.containerPort }}
            - name: https
              containerPort: {{ .Values.service.ports.https.containerPort }}
            - name: rpc
              containerPort: {{ .Values.service.ports.rpc.containerPort }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: zeppelin-server-gateway
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.gateway.repository }}:{{ .Values.image.gateway.tag }}"
          imagePullPolicy: {{ .Values.image.gateway.pullPolicy }}
          command: ["/bin/sh", "-c"]
          env:
          - name: SERVICE_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ include "zeppelin.fullname" . }}-env
                key: SERVICE_DOMAIN
          args:
            - cp -f /tmp/conf/nginx.conf /etc/nginx/nginx.conf;
              sed -i -e "s/SERVICE_DOMAIN/$SERVICE_DOMAIN/g" /etc/nginx/nginx.conf;
              sed -i -e "s/NAMESPACE/$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)/g" /etc/nginx/nginx.conf;
              cat /etc/nginx/nginx.conf;
              /usr/sbin/nginx
          volumeMounts:
            - name: nginx-conf
              mountPath: /tmp/conf
          lifecycle:
            preStop:
              exec:
                # SIGTERM triggers a quick exit; gracefully terminate instead
                command: ["/usr/sbin/nginx", "-s", "quit"]
        - name: dnsmasq  # nginx requires dns resolver for dynamic dns resolution
          image: "{{ .Values.image.dnsmasq.repository }}:{{ .Values.image.dnsmasq.tag }}"
          imagePullPolicy: {{ .Values.image.dnsmasq.pullPolicy }}
          args:
            - --listen
            - "127.0.0.1:53"
            - --default-resolver
            - --append-search-domains
            - --hostsfile=/etc/hosts
            - --verbose
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ include "zeppelin.fullname" . }}-conf
            items:
            - key: nginx.conf
              path: nginx.conf
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
